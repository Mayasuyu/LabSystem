<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 使用扫描机制扫描service包 -->
    <context:component-scan base-package="service"/>

    <!-- 加载properties文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
    </bean>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
    </bean>






    <!-- 添加事务支持 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">

        <!--数据库连接池-->
        <property name="dataSource" ref="dataSource"/>

    </bean>

    <!-- 开启事务注解 -->
    <tx:annotation-driven transaction-manager="txManager"/>







    <!-- 配置MyBatis工厂，同时指定数据源，并与MyBatis完美整合 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

        <property name="dataSource" ref="dataSource"/>

        <!-- configLocation的属性为MyBatis的核心配置文件 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>

    </bean>








    <!-- Mapper代理开发，使用Spring自动扫描MyBatis的接口并装配
        (Spring将指定包中所有被@Mapper注解标注的接口自动装配为MyBatis的映射接口) -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">

        <!-- mybatis-spring组件的扫描器，dao只需要接口(接口方法与SQL映射文件中的相同) -->
        <property name="basePackage" value="dao"/>

        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>

    </bean>

</beans>