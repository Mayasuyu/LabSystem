{"remainingRequest":"G:\\Visual StudioCode\\VScodeSource\\job\\hello-world\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\Visual StudioCode\\VScodeSource\\job\\hello-world\\src\\views\\OrderInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\Visual StudioCode\\VScodeSource\\job\\hello-world\\src\\views\\OrderInfo.vue","mtime":1556542497112},{"path":"G:\\Visual StudioCode\\VScodeSource\\job\\hello-world\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\Visual StudioCode\\VScodeSource\\job\\hello-world\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\Visual StudioCode\\VScodeSource\\job\\hello-world\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\Visual StudioCode\\VScodeSource\\job\\hello-world\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Date from '@/components/Date.vue'\r\nimport store from '../store.js'\r\n\r\nexport default {\r\n\r\n    name: 'orderInfo',\r\n    components: {\r\n\r\n        Date,\r\n\r\n    },\r\n    data () {\r\n\r\n        return {\r\n            \r\n            message: '',\r\n\r\n            checkedLab: '磁控溅射室',\r\n            checkedEquipment: '',\r\n\r\n            labIndex: 0,\r\n            equipIndex: 0,\r\n\r\n            container: [], \r\n            pageSize: 8,\r\n                                    // 实验室表格\r\n            labData: [],            // 总实验室\r\n            showLab: [],            // 每页显示的实验室\r\n\r\n            labNumber: 0,\r\n\r\n            column1: [\r\n\r\n                {\r\n\r\n                    title: '编号',\r\n                    key: 'index',\r\n                    align: 'center',\r\n                    width: 100,\r\n                },\r\n\r\n                {\r\n\r\n                    title: '实验室',\r\n                    key: 'lab',\r\n                    align: 'center'\r\n\r\n                },\r\n\r\n            ],\r\n\r\n                                    // 仪器表格\r\n            equipmentData: [],      // 总仪器\r\n            showEquip: [],          // 每页显示的仪器\r\n\r\n            equipmentNumber: 0,\r\n\r\n            column2: [\r\n\r\n                {\r\n\r\n                    title: '编号',\r\n                    key: 'index',\r\n                    align: 'center',\r\n                    width: 100,\r\n                \r\n                },\r\n\r\n                {\r\n\r\n                    title: '仪器',\r\n                    key: 'equipment',\r\n                    align: 'center'\r\n\r\n                },\r\n\r\n            ],\r\n            \r\n            \r\n            \r\n\r\n        }\r\n    \r\n    },\r\n\r\n    mounted () {    // 页面加载完成后发送请求\r\n\r\n        var _this = this;\r\n\r\n        _this.message = 'labList';\r\n\r\n        this.axios({\r\n\r\n            method:'post',\r\n            \r\n            url: \"http://localhost:8080/LabSystem_war_exploded/getLabsAndEquipments\",\r\n\r\n            headers: {\r\n\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            \r\n            },\r\n\r\n            data: _this.message,\r\n\r\n            responseType: 'json'    // 默认如此\r\n\r\n        }).then((res) => {\r\n\r\n            console.log(\"res.data: \" + res.data[0].lId + res.data[0].labName + res.data[0].equipments);\r\n\r\n            var resData = res.data;\r\n\r\n            _this.container = res.data;\r\n\r\n            console.log(_this.container);\r\n\r\n            _this.labNumber = resData.length;\r\n\r\n            for (var i = 0; i < resData.length; i++) {\r\n\r\n                _this.labData.push({\r\n\r\n                    index: resData[i].lId,\r\n                    lab: resData[i].labName\r\n\r\n                });\r\n\r\n            }\r\n\r\n            if (_this.labNumber <= _this.pageSize) {     // 实验室数 <= 每页容量\r\n\r\n                _this.showLab = _this.labData;\r\n\r\n            } else {    // 实验室数 > 每页容量\r\n\r\n                _this.showLab = _this.labData.slice(0, _this.pageSize);\r\n\r\n            }\r\n\r\n\r\n            for (var j = 0; j < resData[0].equipments.length; j++) {        // 将仪器表初始化为一个实验室对应的仪器表\r\n\r\n                _this.equipmentData.push({\r\n\r\n                    index: j + 1,\r\n                    equipment: resData[0].equipments[j]\r\n\r\n                });\r\n\r\n            }\r\n\r\n            _this.equipmentNumber = resData[0].equipments.length;\r\n\r\n            if (_this.equipmentNumber <= _this.pageSize) {     // 第一个实验室对应的仪器数量 <= 每页容量\r\n\r\n                _this.showEquip = _this.equipmentData.slice(0, _this.equipmentNumber);\r\n\r\n            } else {    // 仪器数量 > 每页容量\r\n\r\n                _this.showEquip = _this.equipmentData.slice(0, _this.pageSize);\r\n\r\n            }\r\n\r\n        }).catch((err) => {\r\n\r\n            console.log(\"error.data :\" + err.data);\r\n        \r\n        })\r\n            \r\n    },\r\n\r\n    methods: {\r\n\r\n        next () {\r\n\r\n            var _this = this;\r\n            this.$router.push('/orderInfo/listInfo');\r\n        },\r\n\r\n        changePageLab(index) {      // 分页Page组件, 控制Lab\r\n\r\n            var start = (index - 1) * this.pageSize;\r\n            var end = index * this.pageSize;\r\n            this.showLab = this.labData.slice(start, end);\r\n\r\n        },\r\n\r\n\r\n        changePageEquip(index) {      // 分页Page组件, 控制Equip\r\n\r\n            var start = (index - 1) * this.pageSize;\r\n            var end = index * this.pageSize;\r\n            this.showEquip = this.equipmentData.slice(start, end); \r\n\r\n        },\r\n\r\n\r\n        clickLab(data, index) {\r\n            \r\n            this.checkedLab = data.lab;\r\n            this.labIndex = index;\r\n\r\n            this.equipmentData.splice(0, this.equipmentData.length);    // 每次push前清空数组元素\r\n            \r\n            for (var j = 0; j < this.container[index].equipments.length; j++) {\r\n\r\n                this.equipmentData.push({\r\n\r\n                    index: j + 1,\r\n                    equipment: this.container[index].equipments[j]\r\n\r\n                });\r\n\r\n            }\r\n            \r\n            this.equipmentNumber = this.container[index].equipments.length;\r\n            \r\n            if (this.equipmentNumber <= this.pageSize) {     // 每个实验室对应的仪器数量 <= 每页容量\r\n\r\n                this.showEquip = this.equipmentData;\r\n\r\n            } else {    // 仪器数量 > 每页容量\r\n\r\n                this.showEquip = this.equipmentData.slice(0, this.pageSize);\r\n\r\n            }\r\n\r\n        },\r\n\r\n\r\n        clickEquip(data, index) {\r\n\r\n            this.checkedEquipment = data.equipment;\r\n            this.equipIndex = index;\r\n\r\n            // alert(this.checkedLab + this.checkedEquipment);\r\n\r\n        },\r\n\r\n        changeColorLab(row, index) {\r\n\r\n            if (index === this.labIndex) {\r\n\r\n                    return 'demo-table-info-row';\r\n            \r\n            }\r\n\r\n        },\r\n\r\n        changeColorEquip(row, index) {      \r\n\r\n            if (index === this.equipIndex) {\r\n\r\n                return 'demo-table-info-row';\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n",{"version":3,"sources":["OrderInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;AAKA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA","file":"OrderInfo.vue","sourceRoot":"src/views","sourcesContent":["<!-- 预约功能页面 -->\r\n<template>\r\n    <div class=\"mainstyle\">\r\n        <div class=\"corresponding\">\r\n            实验室—仪器列表\r\n        </div>\r\n        <div class=\"box\">\r\n\r\n            <div class=\"lab\">\r\n                <Table :row-class-name=\"changeColorLab\" :data=\"showLab\"  :columns=\"column1\" size=\"small\" border simple @on-row-click=\"clickLab\"></Table>\r\n\r\n                <div class=\"page\">\r\n                    <Page :total=\"labNumber\"  :current=\"1\"  @on-change=\"changePageLab\" :page-size=\"pageSize\" size=\"small\" simple></Page>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"equipment\">\r\n                <Table :row-class-name=\"changeColorEquip\" :data=\"showEquip\"  :columns=\"column2\" size=\"small\" border simple @on-row-click=\"clickEquip\"></Table>\r\n\r\n                <div class=\"page\">\r\n                    <Page :total=\"equipmentNumber\"  :current=\"1\"  @on-change=\"changePageEquip\" :page-size=\"pageSize\" size=\"small\" simple></Page>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- 日期组件 -->\r\n            <Date></Date>\r\n\r\n            <div class=\"next\">\r\n                <Button type=\"success\" @click=\"next\">下一步</Button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"alter\">\r\n            <router-view></router-view>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Date from '@/components/Date.vue'\r\nimport store from '../store.js'\r\n\r\nexport default {\r\n\r\n    name: 'orderInfo',\r\n    components: {\r\n\r\n        Date,\r\n\r\n    },\r\n    data () {\r\n\r\n        return {\r\n            \r\n            message: '',\r\n\r\n            checkedLab: '磁控溅射室',\r\n            checkedEquipment: '',\r\n\r\n            labIndex: 0,\r\n            equipIndex: 0,\r\n\r\n            container: [], \r\n            pageSize: 8,\r\n                                    // 实验室表格\r\n            labData: [],            // 总实验室\r\n            showLab: [],            // 每页显示的实验室\r\n\r\n            labNumber: 0,\r\n\r\n            column1: [\r\n\r\n                {\r\n\r\n                    title: '编号',\r\n                    key: 'index',\r\n                    align: 'center',\r\n                    width: 100,\r\n                },\r\n\r\n                {\r\n\r\n                    title: '实验室',\r\n                    key: 'lab',\r\n                    align: 'center'\r\n\r\n                },\r\n\r\n            ],\r\n\r\n                                    // 仪器表格\r\n            equipmentData: [],      // 总仪器\r\n            showEquip: [],          // 每页显示的仪器\r\n\r\n            equipmentNumber: 0,\r\n\r\n            column2: [\r\n\r\n                {\r\n\r\n                    title: '编号',\r\n                    key: 'index',\r\n                    align: 'center',\r\n                    width: 100,\r\n                \r\n                },\r\n\r\n                {\r\n\r\n                    title: '仪器',\r\n                    key: 'equipment',\r\n                    align: 'center'\r\n\r\n                },\r\n\r\n            ],\r\n            \r\n            \r\n            \r\n\r\n        }\r\n    \r\n    },\r\n\r\n    mounted () {    // 页面加载完成后发送请求\r\n\r\n        var _this = this;\r\n\r\n        _this.message = 'labList';\r\n\r\n        this.axios({\r\n\r\n            method:'post',\r\n            \r\n            url: \"http://localhost:8080/LabSystem_war_exploded/getLabsAndEquipments\",\r\n\r\n            headers: {\r\n\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            \r\n            },\r\n\r\n            data: _this.message,\r\n\r\n            responseType: 'json'    // 默认如此\r\n\r\n        }).then((res) => {\r\n\r\n            console.log(\"res.data: \" + res.data[0].lId + res.data[0].labName + res.data[0].equipments);\r\n\r\n            var resData = res.data;\r\n\r\n            _this.container = res.data;\r\n\r\n            console.log(_this.container);\r\n\r\n            _this.labNumber = resData.length;\r\n\r\n            for (var i = 0; i < resData.length; i++) {\r\n\r\n                _this.labData.push({\r\n\r\n                    index: resData[i].lId,\r\n                    lab: resData[i].labName\r\n\r\n                });\r\n\r\n            }\r\n\r\n            if (_this.labNumber <= _this.pageSize) {     // 实验室数 <= 每页容量\r\n\r\n                _this.showLab = _this.labData;\r\n\r\n            } else {    // 实验室数 > 每页容量\r\n\r\n                _this.showLab = _this.labData.slice(0, _this.pageSize);\r\n\r\n            }\r\n\r\n\r\n            for (var j = 0; j < resData[0].equipments.length; j++) {        // 将仪器表初始化为一个实验室对应的仪器表\r\n\r\n                _this.equipmentData.push({\r\n\r\n                    index: j + 1,\r\n                    equipment: resData[0].equipments[j]\r\n\r\n                });\r\n\r\n            }\r\n\r\n            _this.equipmentNumber = resData[0].equipments.length;\r\n\r\n            if (_this.equipmentNumber <= _this.pageSize) {     // 第一个实验室对应的仪器数量 <= 每页容量\r\n\r\n                _this.showEquip = _this.equipmentData.slice(0, _this.equipmentNumber);\r\n\r\n            } else {    // 仪器数量 > 每页容量\r\n\r\n                _this.showEquip = _this.equipmentData.slice(0, _this.pageSize);\r\n\r\n            }\r\n\r\n        }).catch((err) => {\r\n\r\n            console.log(\"error.data :\" + err.data);\r\n        \r\n        })\r\n            \r\n    },\r\n\r\n    methods: {\r\n\r\n        next () {\r\n\r\n            var _this = this;\r\n            this.$router.push('/orderInfo/listInfo');\r\n        },\r\n\r\n        changePageLab(index) {      // 分页Page组件, 控制Lab\r\n\r\n            var start = (index - 1) * this.pageSize;\r\n            var end = index * this.pageSize;\r\n            this.showLab = this.labData.slice(start, end);\r\n\r\n        },\r\n\r\n\r\n        changePageEquip(index) {      // 分页Page组件, 控制Equip\r\n\r\n            var start = (index - 1) * this.pageSize;\r\n            var end = index * this.pageSize;\r\n            this.showEquip = this.equipmentData.slice(start, end); \r\n\r\n        },\r\n\r\n\r\n        clickLab(data, index) {\r\n            \r\n            this.checkedLab = data.lab;\r\n            this.labIndex = index;\r\n\r\n            this.equipmentData.splice(0, this.equipmentData.length);    // 每次push前清空数组元素\r\n            \r\n            for (var j = 0; j < this.container[index].equipments.length; j++) {\r\n\r\n                this.equipmentData.push({\r\n\r\n                    index: j + 1,\r\n                    equipment: this.container[index].equipments[j]\r\n\r\n                });\r\n\r\n            }\r\n            \r\n            this.equipmentNumber = this.container[index].equipments.length;\r\n            \r\n            if (this.equipmentNumber <= this.pageSize) {     // 每个实验室对应的仪器数量 <= 每页容量\r\n\r\n                this.showEquip = this.equipmentData;\r\n\r\n            } else {    // 仪器数量 > 每页容量\r\n\r\n                this.showEquip = this.equipmentData.slice(0, this.pageSize);\r\n\r\n            }\r\n\r\n        },\r\n\r\n\r\n        clickEquip(data, index) {\r\n\r\n            this.checkedEquipment = data.equipment;\r\n            this.equipIndex = index;\r\n\r\n            // alert(this.checkedLab + this.checkedEquipment);\r\n\r\n        },\r\n\r\n        changeColorLab(row, index) {\r\n\r\n            if (index === this.labIndex) {\r\n\r\n                    return 'demo-table-info-row';\r\n            \r\n            }\r\n\r\n        },\r\n\r\n        changeColorEquip(row, index) {      \r\n\r\n            if (index === this.equipIndex) {\r\n\r\n                return 'demo-table-info-row';\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n\r\n\r\n.next Button {\r\n\r\n    position: absolute;\r\n    left: 735px;\r\n    top: 522px;\r\n    width: 130px;\r\n    height: 40px;\r\n    font-size: 17px;\r\n}\r\n\r\n\r\n.mainstyle {\r\n\r\n    position: absolute;\r\n    left: 0px;\r\n    top: 68px;\r\n    width: 100%;\r\n    height: 670px;\r\n    text-align: center;\r\n    background: -webkit-linear-gradient( rgb(102, 176, 236) ,rgb(179, 200, 211)); /* Safari 5.1 - 6.0 */\r\n    background: -o-linear-gradient( rgb(102, 176, 236), rgb(179, 200, 211)); /* Opera 11.1 - 12.0 */\r\n    background: -moz-linear-gradient(rgb(102, 176, 236),rgb(179, 200, 211)); /* Firefox 3.6 - 15 */\r\n    background: linear-gradient( rgb(59, 158, 238) , rgb(94, 180, 226)); /* 标准的语法 */\r\n\r\n}\r\n\r\n\r\n.corresponding {\r\n\r\n    position: absolute;\r\n    font-size: 20px;\r\n    color:white;\r\n    left: 687px;\r\n    top: 22px;\r\n\r\n}\r\n\r\n\r\n\r\n.box {\r\n    \r\n    position: absolute;\r\n    left: 268px;\r\n    top: 60px;\r\n    width: 1000px;\r\n    height: 580px;\r\n    background: #fff;\r\n\r\n}\r\n\r\n\r\n.page {\r\n\r\n    position: absolute;\r\n    top: 362px;\r\n    width: 160px;\r\n    height: 36px;\r\n    left: 155px;\r\n\r\n}\r\n\r\n\r\n.lab {\r\n\r\n    position: absolute;\r\n    left: 0px;\r\n    top: 0px;\r\n    width: 500px;\r\n    height: 400px;\r\n    background: #fff;\r\n\r\n}\r\n\r\n\r\n.equipment {\r\n\r\n    position: absolute;\r\n    right: 0px;\r\n    top: 0px;\r\n    width: 500px;\r\n    height: 400px;\r\n    background: #fff;\r\n\r\n}\r\n\r\n.ivu-table .demo-table-info-row td{\r\n\r\n    background-color: #2db7f5;\r\n    color: #fff;\r\n\r\n}\r\n\r\n</style>"]}]}